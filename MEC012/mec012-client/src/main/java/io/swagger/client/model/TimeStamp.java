/*
 * ETSI GS MEC 012 - Radio Network Information API
 * The ETSI MEC ISG MEC012 Radio Network Information API described using OpenAPI.
 *
 * OpenAPI spec version: 2.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * TimeStamp
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-09T15:33:56.133+01:00[Europe/Rome]")
public class TimeStamp {
  @SerializedName("nanoSeconds")
  private Integer nanoSeconds = null;

  @SerializedName("seconds")
  private Integer seconds = null;

  public TimeStamp nanoSeconds(Integer nanoSeconds) {
    this.nanoSeconds = nanoSeconds;
    return this;
  }

   /**
   * The nanoseconds part of the time. Time is defined as Unix-time since January 1, 1970, 00:00:00 UTC.
   * @return nanoSeconds
  **/
  @Schema(required = true, description = "The nanoseconds part of the time. Time is defined as Unix-time since January 1, 1970, 00:00:00 UTC.")
  public Integer getNanoSeconds() {
    return nanoSeconds;
  }

  public void setNanoSeconds(Integer nanoSeconds) {
    this.nanoSeconds = nanoSeconds;
  }

  public TimeStamp seconds(Integer seconds) {
    this.seconds = seconds;
    return this;
  }

   /**
   * The seconds part of the time. Time is defined as Unixtime since January 1, 1970, 00:00:00 UTC.
   * @return seconds
  **/
  @Schema(required = true, description = "The seconds part of the time. Time is defined as Unixtime since January 1, 1970, 00:00:00 UTC.")
  public Integer getSeconds() {
    return seconds;
  }

  public void setSeconds(Integer seconds) {
    this.seconds = seconds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimeStamp timeStamp = (TimeStamp) o;
    return Objects.equals(this.nanoSeconds, timeStamp.nanoSeconds) &&
        Objects.equals(this.seconds, timeStamp.seconds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nanoSeconds, seconds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimeStamp {\n");
    
    sb.append("    nanoSeconds: ").append(toIndentedString(nanoSeconds)).append("\n");
    sb.append("    seconds: ").append(toIndentedString(seconds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
