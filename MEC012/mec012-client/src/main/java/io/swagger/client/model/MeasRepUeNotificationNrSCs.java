/*
 * ETSI GS MEC 012 - Radio Network Information API
 * The ETSI MEC ISG MEC012 Radio Network Information API described using OpenAPI.
 *
 * OpenAPI spec version: 2.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Measurement quantities concerning the secondary serving cells.
 */
@Schema(description = "Measurement quantities concerning the secondary serving cells.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-09T15:33:56.133+01:00[Europe/Rome]")
public class MeasRepUeNotificationNrSCs {
  @SerializedName("nrSCellInfo")
  private List<MeasRepUeNotificationNrSCsNrSCellInfo> nrSCellInfo = new ArrayList<MeasRepUeNotificationNrSCsNrSCellInfo>();

  @SerializedName("nrSCellRsrp")
  private Integer nrSCellRsrp = null;

  @SerializedName("nrSCellRsrq")
  private Integer nrSCellRsrq = null;

  @SerializedName("nrSCellRssi")
  private Integer nrSCellRssi = null;

  public MeasRepUeNotificationNrSCs nrSCellInfo(List<MeasRepUeNotificationNrSCsNrSCellInfo> nrSCellInfo) {
    this.nrSCellInfo = nrSCellInfo;
    return this;
  }

  public MeasRepUeNotificationNrSCs addNrSCellInfoItem(MeasRepUeNotificationNrSCsNrSCellInfo nrSCellInfoItem) {
    this.nrSCellInfo.add(nrSCellInfoItem);
    return this;
  }

   /**
   * Secondary serving cell(s) info.
   * @return nrSCellInfo
  **/
  @Schema(required = true, description = "Secondary serving cell(s) info.")
  public List<MeasRepUeNotificationNrSCsNrSCellInfo> getNrSCellInfo() {
    return nrSCellInfo;
  }

  public void setNrSCellInfo(List<MeasRepUeNotificationNrSCsNrSCellInfo> nrSCellInfo) {
    this.nrSCellInfo = nrSCellInfo;
  }

  public MeasRepUeNotificationNrSCs nrSCellRsrp(Integer nrSCellRsrp) {
    this.nrSCellRsrp = nrSCellRsrp;
    return this;
  }

   /**
   * Reference Signal Received Power measurement according to mapping table in ETSI TS 138.133 [i.14].
   * @return nrSCellRsrp
  **/
  @Schema(description = "Reference Signal Received Power measurement according to mapping table in ETSI TS 138.133 [i.14].")
  public Integer getNrSCellRsrp() {
    return nrSCellRsrp;
  }

  public void setNrSCellRsrp(Integer nrSCellRsrp) {
    this.nrSCellRsrp = nrSCellRsrp;
  }

  public MeasRepUeNotificationNrSCs nrSCellRsrq(Integer nrSCellRsrq) {
    this.nrSCellRsrq = nrSCellRsrq;
    return this;
  }

   /**
   * Reference Signal Received Quality measurement according to mapping table in ETSI TS 138.133 [i.14].
   * @return nrSCellRsrq
  **/
  @Schema(description = "Reference Signal Received Quality measurement according to mapping table in ETSI TS 138.133 [i.14].")
  public Integer getNrSCellRsrq() {
    return nrSCellRsrq;
  }

  public void setNrSCellRsrq(Integer nrSCellRsrq) {
    this.nrSCellRsrq = nrSCellRsrq;
  }

  public MeasRepUeNotificationNrSCs nrSCellRssi(Integer nrSCellRssi) {
    this.nrSCellRssi = nrSCellRssi;
    return this;
  }

   /**
   * Reference signal SINR measurement according to mapping table in ETSI TS 138.133 [i.14].
   * @return nrSCellRssi
  **/
  @Schema(description = "Reference signal SINR measurement according to mapping table in ETSI TS 138.133 [i.14].")
  public Integer getNrSCellRssi() {
    return nrSCellRssi;
  }

  public void setNrSCellRssi(Integer nrSCellRssi) {
    this.nrSCellRssi = nrSCellRssi;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MeasRepUeNotificationNrSCs measRepUeNotificationNrSCs = (MeasRepUeNotificationNrSCs) o;
    return Objects.equals(this.nrSCellInfo, measRepUeNotificationNrSCs.nrSCellInfo) &&
        Objects.equals(this.nrSCellRsrp, measRepUeNotificationNrSCs.nrSCellRsrp) &&
        Objects.equals(this.nrSCellRsrq, measRepUeNotificationNrSCs.nrSCellRsrq) &&
        Objects.equals(this.nrSCellRssi, measRepUeNotificationNrSCs.nrSCellRssi);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nrSCellInfo, nrSCellRsrp, nrSCellRsrq, nrSCellRssi);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MeasRepUeNotificationNrSCs {\n");
    
    sb.append("    nrSCellInfo: ").append(toIndentedString(nrSCellInfo)).append("\n");
    sb.append("    nrSCellRsrp: ").append(toIndentedString(nrSCellRsrp)).append("\n");
    sb.append("    nrSCellRsrq: ").append(toIndentedString(nrSCellRsrq)).append("\n");
    sb.append("    nrSCellRssi: ").append(toIndentedString(nrSCellRssi)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
